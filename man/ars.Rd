% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/arscpp.R
\name{ars}
\alias{ars}
\title{Construct an Adaptive Rejection Sampler}
\usage{
ars(f, f_prime, x, xlb = -Inf, xrb = Inf, max_points = 100, ...)
}
\arguments{
\item{f}{An R function computing the (potentially unnormalized) log-density of the distribution we want to sample from.
Must take a numeric vector as the first argument and must be vectorized. Additional arguments to \code{f} may be passed
through \code{...}.}

\item{f_prime}{The first derivative of \code{f} with regard to the variable we want to sample.
Must take a numeric vector as the first argument and must be vectorized. Additional arguments to \code{f_prime} may be passed
through \code{...}.}

\item{x}{At least two starting points; at least one starting point should be on the left/right of the mode of the target
distribution, respectively. If this is not the case, \code{ars} will try to find valid starting points.}

\item{xlb}{A lower bound for the support of the target distribution. May be \code{-Inf}.}

\item{xrb}{An upper bound for the support of the target distribution. May be \code{Inf}.}

\item{max_points}{Maximum number of support points used to construct the ARS upper/lower hulls. Modifications from the
default value should not be necessary.}

\item{...}{Additonal named arguments passed to \code{f} and \code{f_prime}.}
}
\value{
A \code{ARS_Rwrapper} object.
}
\description{
\code{ars} returns an object for sampling from an arbitrary univariate log-concave density.
}
\details{
\code{ars} instantiates a C++ object for sampling from an arbitrary univariate log-concave density using
the Adaptive Rejection Sampler by Wild and Gilks (1993, Algorithm AS 287).
See the examples for a typical use case.
}
\examples{
# Normal log pdf
f <- function(x, mu, sd) {
  -0.5*(sd^(-2))*(x-mu)^2
}

# Derivative of normal log pdf
f_prime <- function(x, mu, sd) {
  -1*(sd^(-2))*(x-mu)
}

# Make sampler & sample 100 points from standard normal
ars_sampler <- ars(f, f_prime, c(-1,1), mu = 0, sd = 1)
smp <- ars_sampler$sample(100)

}

